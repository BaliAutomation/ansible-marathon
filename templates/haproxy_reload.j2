#! /bin/sh

{{ haproxy_script_location }}/haproxy_dns_cfg {{inventory_hostname}}:8080 > /etc/haproxy/haproxy.cfg

# replace bind later with
#     bind *:443 ssl crt /etc/ssl/xip.io/xip.io.pem

echo "
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
#    ca-base /etc/ssl/certs
#    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
#    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend marathon
    bind *:80
    mode http
    default_backend marathon_apps

backend marathon_apps
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server marathon1 10.3.1.1:8080 check
    server marathon1 10.3.1.2:8080 check
    server marathon1 10.3.1.3:8080 check

" >> /etc/haproxy/haproxy.cfg

/bin/systemctl restart haproxy.service






